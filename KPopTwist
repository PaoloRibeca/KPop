#!/bin/env bash

TABLE="$1"
OUTPUT="$2"
POWER="$3"

NPROC=$(( ( $(nproc) + 1 ) / 2 ))

head -1 "$TABLE" | awk -F '\t' '{printf $2; for (i=3;i<=NF;++i) printf "\t"$i; printf "\n"}' > "${OUTPUT}.txt"
tail -n +2 "$TABLE" | Parallel -t "$NPROC" -- awk -F '\t' '{printf $2; for (i=3;i<=NF;++i) printf "\t"$i; printf "\n"}' >> "${OUTPUT}.txt" &
tail -n +2 "$TABLE" | Parallel -t "$NPROC" -- awk -F '\t' '{print $1}' > "${OUTPUT}.names.txt" &
wait

Rscript --vanilla <(
cat <<'_____'
  library(data.table)
  library(ca)
  args<-commandArgs(trailingOnly=TRUE)
  if (is.na(args[4])||args[4]=="")
    args[4]<-"1."
  stuff<-data.table::fread(args[1],sep="\t",header=TRUE)
  stuff<-stuff[sort(sample(nrow(stuff),as.integer(nrow(stuff)*as.numeric(args[4]))))]
  stuff_ca<-ca(stuff)
  vars<-as.data.frame(100*stuff_ca$sv^2/sum(stuff_ca$sv^2))
  colnames(vars)<-c("perc_inertia")
  write.table(vars,paste0(args[3],".inertia.txt"),sep="\t")
  stuff_ca_coords=cacoord(stuff_ca,cols=TRUE)
  write.table(stuff_ca_coords,paste0(args[3],".twisted.txt"),sep="\t")
  twister<-t(as.matrix(stuff_ca$rowcoord))/stuff_ca$sv
  colnames(twister)<-t(data.table::fread(args[2],sep="\t",header=FALSE))
  data.table::fwrite(data.table(twister,keep.rownames=FALSE),paste0(args[3],".twister.txt"),sep="\t")
_____
) "${OUTPUT}.txt" "${OUTPUT}.names.txt" "$OUTPUT" "$POWER"

# We remove temporary files and convert to binary form
